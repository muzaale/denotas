Traceback (most recent call last):
  File "/usr/local/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/anaconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/usr/local/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/local/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import networkx as nx
import matplotlib.pyplot as plt
import numpy as np
import sklearn as skl

#plt.figure(figsize=[2, 2])
G = nx.DiGraph()
G.add_node("Object ",  pos = (0, 5) )
G.add_node("Hormone",  pos = (1, 5) )
G.add_node("Diet",  pos = (2, 5) )
G.add_node("Muscle",  pos = (3, 5) )
G.add_node("Senses",  pos = (4, 5) )
G.add_node("Blocker",  pos = (5, 5) )
G.add_node("Agonist",  pos = (6, 5) )
G.add_node("Meaning",  pos = (7, 5) )

G.add_node("Encoder",  pos = (1.4, 4) )
G.add_node("Efferent",  pos = (2.8, 4) )
G.add_node("Afferents",  pos = (4.2, 4) )
G.add_node("Divinity",  pos = (5.6, 4) )

G.add_node("Code",  pos = (2.1, 3) )
G.add_node("Scripture",  pos = (4.9, 3) )

G.add_node("Decoder",  pos = (1.4, 2) )
G.add_node("Meta",  pos = (2.8, 2) )
G.add_node("Physics",  pos = (4.2, 2) )
G.add_node("Prophets",  pos = (5.6, 2) )


G.add_node("Restore",  pos = (0, 1) )
G.add_node("Stress",  pos = (1, 1) )
G.add_node("Cause",  pos = (2, 1) )
G.add_node("Battle",  pos = (3, 1) )
G.add_node("War",  pos = (4, 1) )
G.add_node("Rank",  pos = (5, 1) )
G.add_node("Discord",  pos = (6, 1) )
G.add_node("Action",  pos = (7, 1) )

G.add_edges_from([ ("Object ", "Encoder"),  ("Object ", "Efferent"),  ("Object ", "Afferents"),  ("Object ", "Divinity")])
G.add_edges_from([ ("Hormone", "Encoder"),  ("Hormone", "Efferent"),  ("Hormone", "Afferents"),  ("Hormone", "Divinity")])
G.add_edges_from([ ("Diet", "Encoder"),  ("Diet", "Efferent"),  ("Diet", "Afferents"),  ("Diet", "Divinity")])
G.add_edges_from([ ("Muscle", "Encoder"),  ("Muscle", "Efferent"),  ("Muscle", "Afferents"),  ("Muscle", "Divinity")])
G.add_edges_from([ ("Senses", "Encoder"),  ("Senses", "Efferent"),  ("Senses", "Afferents"),  ("Senses", "Divinity")])
G.add_edges_from([ ("Blocker", "Encoder"),  ("Blocker", "Efferent"),  ("Blocker", "Afferents"),  ("Blocker", "Divinity")])
G.add_edges_from([ ("Agonist", "Encoder"),  ("Agonist", "Efferent"),  ("Agonist", "Afferents"),  ("Agonist", "Divinity")])
G.add_edges_from([ ("Meaning", "Encoder"),  ("Meaning", "Efferent"),  ("Meaning", "Afferents"),  ("Meaning", "Divinity")])

G.add_edges_from([ ("Encoder", "Code"),  ("Encoder", "Scripture")])
G.add_edges_from([ ("Efferent", "Code"),  ("Efferent", "Scripture")])
G.add_edges_from([ ("Afferents", "Code"),  ("Afferents", "Scripture")])
G.add_edges_from([ ("Divinity", "Code"),  ("Divinity", "Scripture")])


G.add_edges_from([ ("Code", "Decoder"),  ("Code", "Meta"),  ("Code", "Physics"),  ("Code", "Prophets")])
G.add_edges_from([ ("Scripture", "Decoder"),  ("Scripture", "Meta"),  ("Scripture", "Physics"),  ("Scripture", "Prophets")])

G.add_edges_from([ ("Decoder", "Restore"),  ("Decoder", "Stress"),  ("Decoder", "Cause"),  ("Decoder", "Battle")])
G.add_edges_from([ ("Decoder", "War"),  ("Decoder", "Rank"),  ("Decoder", "Discord"),  ("Decoder", "Action")])
G.add_edges_from([ ("Meta", "Restore"),  ("Meta", "Stress"),  ("Meta", "Cause"),  ("Meta", "Battle")])
G.add_edges_from([ ("Meta", "War"),  ("Meta", "Rank"),  ("Meta", "Discord"),  ("Meta", "Action")])
G.add_edges_from([ ("Physics", "Restore"),  ("Physics", "Stress"),  ("Physics", "Cause"),  ("Physics", "Battle")])
G.add_edges_from([ ("Physics", "War"),  ("Physics", "Rank"),  ("Physics", "Discord"),  ("Physics", "Action")])
G.add_edges_from([ ("Prophets", "Restore"),  ("Prophets", "Stress"),  ("Prophets", "Cause"),  ("Prophets", "Battle")])
G.add_edges_from([ ("Prophets", "War"),  ("Prophets", "Rank"),  ("Prophets", "Discord"),  ("Prophets", "Action")])


#G.add_edges_from([("H11", "H21"), ("H11", "H22"), ("H12", "H21"), ("H12", "H22")])
#G.add_edges_from([("H21", "Y"), ("H22", "Y")])
nx.draw(G, 
        nx.get_node_attributes(G, 'pos'), 
        with_labels=True, 
        font_weight='bold', 
        node_size = 3000,
        node_color = "lightblue",
        linewidths = 3)
ax= plt.gca()
ax.collections[0].set_edgecolor("#000000")
ax.set_xlim([-.5, 7.5])
ax.set_ylim([.5, 5.5])
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 1[0m
[0;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01mnetworkx[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnx[39;00m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m

[0;31mModuleNotFoundError[0m: No module named 'networkx'
ModuleNotFoundError: No module named 'networkx'

