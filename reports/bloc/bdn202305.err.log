Traceback (most recent call last):
  File "/usr/local/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/anaconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/usr/local/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/local/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import os
import cv2
import numpy as np

input_folder = '/Users/d/Dropbox (Personal)/0g.ÎºÎ¿ÏƒÎ¼Î¿Î³Î¿Î½Î¯Î±,Î³/2.pantheon/input_folder'
output_folder = '/Users/d/Dropbox (Personal)/0g.ÎºÎ¿ÏƒÎ¼Î¿Î³Î¿Î½Î¯Î±,Î³/2.pantheon/output_folder'

# Iterate over images in the input folder
for filename in os.listdir(input_folder):
    if filename.endswith('.PNG') or filename.endswith('.PNG'):
        # Read the image
        image_path = os.path.join(input_folder, filename)
        image = cv2.imread(image_path)

        # Apply image processing techniques
        # Adjust contrast and brightness
        alpha = 1.5  # Contrast control (1.0 for no change)
        beta = 10    # Brightness control (0 for no change)
        adjusted_image = cv2.convertScaleAbs(image, alpha=alpha, beta=beta)

        # Increase saturation
        hsv_image = cv2.cvtColor(adjusted_image, cv2.COLOR_BGR2HSV)
        hsv_image = hsv_image.astype(float)
        hsv_image[:, :, 1] *= 1.2  # Increase saturation by 20%
        hsv_image[:, :, 1] = np.clip(hsv_image[:, :, 1], 0, 255)  # Clip values to valid range
        hsv_image = hsv_image.astype(np.uint8)
        saturated_image = cv2.cvtColor(hsv_image, cv2.COLOR_HSV2BGR)

        # Apply adaptive histogram equalization
        clahe = cv2.createCLAHE(clipLimit=2.0, tileGridSize=(8, 8))
        lab_image = cv2.cvtColor(saturated_image, cv2.COLOR_BGR2LAB)
        lab_image[:, :, 0] = clahe.apply(lab_image[:, :, 0])
        equalized_image = cv2.cvtColor(lab_image, cv2.COLOR_LAB2BGR)

        # Correct white balance using Gray World assumption
        avg_b = np.mean(equalized_image[:, :, 0])
        avg_g = np.mean(equalized_image[:, :, 1])
        avg_r = np.mean(equalized_image[:, :, 2])
        avg_gray = (avg_b + avg_g + avg_r) / 3.0
        corrected_image = equalized_image.copy()
        corrected_image[:, :, 0] = np.clip(corrected_image[:, :, 0] * (avg_gray / avg_b), 0, 255)
        corrected_image[:, :, 1] = np.clip(corrected_image[:, :, 1] * (avg_gray / avg_g), 0, 255)
        corrected_image[:, :, 2] = np.clip(corrected_image[:, :, 2] * (avg_gray / avg_r), 0, 255)

        # Sharpening using unsharp masking
        blurred_image = cv2.GaussianBlur(corrected_image, (0, 0), 3)
        sharpened_image = cv2.addWeighted(corrected_image, 1.5, blurred_image, -0.5, 0)

        # Save the refined image to the output folder
        output_path = os.path.join(output_folder, filename)
        cv2.imwrite(output_path, sharpened_image)

        print(f'{filename} processe d and saved.')

print('Image processing complete.')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[4], line 2[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mos[39;00m
[0;32m----> 2[0m [38;5;28;01mimport[39;00m [38;5;21;01mcv2[39;00m
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m      5[0m input_folder [38;5;241m=[39m [38;5;124m'[39m[38;5;124m/Users/d/Dropbox (Personal)/0g.ÎºÎ¿ÏƒÎ¼Î¿Î³Î¿Î½Î¯Î±,Î³/2.pantheon/input_folder[39m[38;5;124m'[39m

[0;31mModuleNotFoundError[0m: No module named 'cv2'
ModuleNotFoundError: No module named 'cv2'

