Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/d/Library/Python/3.11/lib/python/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import streamlit as st
import requests as rq
import bs4
import pandas as pd
import plotly.express as px
import numpy as np
from dash import Dash, dcc, html, Input, Output

#st.title("GDP by Region")

url = 'https://en.wikipedia.org/wiki/List_of_countries_by_GDP_(nominal)'
page = rq.get(url)
page.text[0 : 99]

bs4page = bs4.BeautifulSoup(page.text, 'html.parser')

tables = bs4page.find('table',{'class':"wikitable"})

gdp = pd.read_html(str(tables))
gdp = pd.read_html(str(tables))[0]

## There's an empty row

gdp = gdp.rename(columns={"UN Region": "Region", "IMF[1][13]": "IMF", "World Bank[14]": "World Bank", "Country/Territory": "Country"})
gdp.IMF = gdp.IMF[gdp.IMF != "101560901"]


gdp.IMF = gdp.IMF[gdp.IMF != "101560901"]
gdp = gdp.drop(gdp.columns[3], axis=1)
gdp.IMF = gdp.IMF.apply(pd.to_numeric,errors='coerce')
gdp = gdp.dropna()

# gdp.dtypes
#gdp_imf = pd.to_numeric(gdp_imf, errors='coerce')
#gdp = gdp.dropna()

gdp = gdp.to_numpy()

regions = gdp[:, 1]
gdp_imf = gdp[:, 2]
countries = gdp[:,0]

colors = px.colors.qualitative.Pastel1 # set the color scheme

fig = px.bar(x=regions, y=gdp_imf, color_discrete_sequence=colors, hover_data=[gdp_imf])
fig.update_layout(template='plotly')
fig.update_xaxes(title_text="Region")
fig.update_yaxes(title_text="GDP as per IMF (in USD)")
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 1[0m
[0;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01mstreamlit[39;00m [38;5;28;01mas[39;00m [38;5;21;01mst[39;00m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mrequests[39;00m [38;5;28;01mas[39;00m [38;5;21;01mrq[39;00m
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mbs4[39;00m

[0;31mModuleNotFoundError[0m: No module named 'streamlit'

